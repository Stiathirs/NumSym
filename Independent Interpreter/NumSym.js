var o=process.argv;3>o.length&&(console.log("Usage: node "+o[1]+" numsymfile [inputfile | inputstring]"),process.exit(1));var a,f=require("fs"),c=o[2],z="StackUnderflowError: Stack is empty",w="StackUnderflowError: Stack contains less than two values";if(c=f.readFileSync(c,"utf8"),3<o.length){a=o[3];try{a=f.readFileSync(a,"utf8")}catch{}}else a="";var i=0,e=!1,g=0,s=[],b=0;try{for(c=c.replace(/[^0-9\+\-\*\/%^!@;#$<=>\[\]]/g,"");i<c.length;){var k=c.charAt(i);if(/[0-9]/.test(k)&&s.push(+k),/\^/g.test(k)&&(g<a.length?(s.push(a.charAt(g).charCodeAt(0)),g++):s.push(0)),/!/.test(k))if(0<s.length){var temp=s.pop();s.push(temp,temp)}else throw z;if(/@/.test(k)&&(s=s.reverse()),/[\+\*\-\/\%]/.test(k))if(1<s.length){var r=s.pop(),l=s.pop(),st=l.toString()+k+r.toString();s.push(eval(st))}else throw w;if(/\#/.test(k))if(0<s.length)process.stdout.write(s.pop().toString());else throw z;if(/\$/.test(k))if(0<s.length)process.stdout.write(String.fromCharCode(s.pop()));else throw z;if(/;/.test(k))if(0<s.length)s.pop();else throw z;if(/[=<>]/.test(k))if(1<s.length){var r=s.pop(),l=s.pop();if("="==k)r==l?s.push(1):s.push(0);else{var st=l.toString()+k+r.toString();eval(st)?s.push(1):s.push(0)}}else throw w;if(/\[/g.test(k))if(0<s.length){var temp=s.pop();if(s.push(temp,temp),0!=s.pop())b++;else{var p=b;for(b++;b!=p&&i<c.length;)i++,k=c.charAt(i),"["==k?b++:"]"==k&&b--;e=!0}}else throw z;if(!e&&/\]/g.test(k)&&0<b){var p=b;for(b--;b!=p&&i<c.length;)i--,k=c.charAt(i),"["==k?b++:"]"==k&&b--;i--}e=!1,i++}}catch(a){console.log("\n"+a),i=1/0}